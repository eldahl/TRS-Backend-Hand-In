// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TRS_backend.DBModel;

#nullable disable

namespace TRS_backend.Migrations
{
    [DbContext(typeof(TRSDbContext))]
    [Migration("20240527033712_DatabaseSetup")]
    partial class DatabaseSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TRS_backend.DBModel.TblOpenDays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<TimeSpan>("CloseTime")
                        .HasColumnType("time(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("OpenTime")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("Date")
                        .IsUnique();

                    b.ToTable("OpenDays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CloseTime = new TimeSpan(0, 21, 0, 0, 0),
                            Date = new DateTime(2024, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OpenTime = new TimeSpan(0, 16, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            CloseTime = new TimeSpan(0, 21, 0, 0, 0),
                            Date = new DateTime(2024, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OpenTime = new TimeSpan(0, 16, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("TRS_backend.DBModel.TblReservationNotificationEmails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("StaffNotificationEmails");
                });

            modelBuilder.Entity("TRS_backend.DBModel.TblReservationNotificationPhoneNumbers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryCode")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("StaffNotificationPhoneNumbers");
                });

            modelBuilder.Entity("TRS_backend.DBModel.TblTableReservations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OpenDayId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("SendReminders")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<int>("TimeSlotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OpenDayId");

                    b.HasIndex("TableId");

                    b.HasIndex("TimeSlotId");

                    b.ToTable("TableReservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "This is a comment",
                            Email = "customer@gmail.com",
                            FullName = "Customer user",
                            OpenDayId = 1,
                            PhoneNumber = "12345678",
                            SendReminders = true,
                            TableId = 1,
                            TimeSlotId = 1
                        });
                });

            modelBuilder.Entity("TRS_backend.DBModel.TblTables", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Seats = 8,
                            TableName = "Table 10"
                        },
                        new
                        {
                            Id = 2,
                            Seats = 6,
                            TableName = "Table 11"
                        },
                        new
                        {
                            Id = 3,
                            Seats = 6,
                            TableName = "Table 12"
                        },
                        new
                        {
                            Id = 4,
                            Seats = 4,
                            TableName = "Table 13"
                        },
                        new
                        {
                            Id = 5,
                            Seats = 4,
                            TableName = "Table 17"
                        },
                        new
                        {
                            Id = 6,
                            Seats = 4,
                            TableName = "Table 19"
                        },
                        new
                        {
                            Id = 7,
                            Seats = 8,
                            TableName = "Table 101"
                        },
                        new
                        {
                            Id = 8,
                            Seats = 8,
                            TableName = "Table 110"
                        },
                        new
                        {
                            Id = 9,
                            Seats = 6,
                            TableName = "Table 103"
                        });
                });

            modelBuilder.Entity("TRS_backend.DBModel.TblTimeSlots", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.ToTable("TimeSlots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = new TimeSpan(0, 2, 0, 0, 0),
                            StartTime = new TimeSpan(0, 16, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("TRS_backend.DBModel.TblUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varbinary(1024)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varbinary(1024)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 5, 27, 5, 37, 12, 640, DateTimeKind.Local).AddTicks(1148),
                            Email = "testAdmin@test.dk",
                            PasswordHash = new byte[] { 132, 127, 146, 203, 232, 109, 168, 134, 95, 67, 76, 196, 80, 72, 249, 242, 248, 3, 2, 67, 173, 180, 13, 74, 95, 31, 117, 172, 196, 200, 86, 2 },
                            Role = 0,
                            Salt = new byte[] { 227, 9, 16, 1, 143, 59, 46, 90, 127, 226, 72, 61, 178, 219, 241, 179, 4, 47, 198, 132, 217, 132, 18, 97, 251, 195, 96, 207, 27, 150, 58, 202 },
                            Username = "testAdmin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 5, 27, 5, 37, 12, 640, DateTimeKind.Local).AddTicks(1204),
                            Email = "testUser@test.dk",
                            PasswordHash = new byte[] { 254, 32, 60, 208, 50, 84, 131, 38, 59, 59, 98, 231, 90, 130, 11, 104, 235, 163, 209, 117, 14, 63, 250, 105, 243, 9, 0, 101, 242, 252, 92, 20 },
                            Role = 1,
                            Salt = new byte[] { 74, 156, 203, 196, 206, 6, 47, 163, 200, 212, 177, 245, 12, 138, 51, 21, 9, 101, 165, 37, 158, 222, 148, 43, 151, 217, 222, 94, 146, 65, 142, 232 },
                            Username = "testUser"
                        });
                });

            modelBuilder.Entity("TRS_backend.DBModel.TblTableReservations", b =>
                {
                    b.HasOne("TRS_backend.DBModel.TblOpenDays", "OpenDay")
                        .WithMany()
                        .HasForeignKey("OpenDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TRS_backend.DBModel.TblTables", "Table")
                        .WithMany()
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TRS_backend.DBModel.TblTimeSlots", "TimeSlot")
                        .WithMany()
                        .HasForeignKey("TimeSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OpenDay");

                    b.Navigation("Table");

                    b.Navigation("TimeSlot");
                });
#pragma warning restore 612, 618
        }
    }
}
